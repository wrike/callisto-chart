upstream callisto {
  server {{ template "callisto.name" . }}:8080;
}
upstream selenoid {
  server {{ template "callisto.name" . }}-selenoid-ui:8000;
}
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

log_format custom '$remote_addr [$time_iso8601] $scheme "$request" $request_time $status "$http_user_agent" $upstream_response_time "$host" $upstream_addr "{{ .Values.instanceID }}"';
access_log off;

server {
  listen 80 default_server;
  resolver {{ .Values.nginx.resolver }};
  access_log /var/log/nginx/access.log custom;

  proxy_connect_timeout       {{ .Values.nginx.proxy.connectTimeout }};
  proxy_send_timeout          {{ .Values.nginx.proxy.sendTimeout }};
  proxy_read_timeout          {{ .Values.nginx.proxy.readTimeout }};
  send_timeout                {{ .Values.nginx.proxy.sendTimeout }};
  client_max_body_size        {{ .Values.nginx.proxy.maxBodySize }};

  rewrite ^(.*)/se/file$ $1/file break;  # selenium 4 compatibility

  error_page 504 /504.html;
    location /504.html {
    return 504 '{"error": "504", "message": "Gateway Timeout at Callisto nginx. Probably the browser has crashed."}';
  }
  error_page 503 /503.html;
    location /503.html {
    return 503 '{"error": "503", "message": "Service Temporarily Unavailable at Callisto nginx. Probably the Kubernetes API is unavailable."}';
  }
  error_page 502 /502.html;
    location /502.html{
    return 502 '{"error": "502", "message": "Bad Gateway at Callisto nginx. Probably the container for the browser is not running."}';
  }
  location ~ /session/(?<pod_name>browser-[a-z0-9]+)-(?<pod_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)-(?<session_id>[a-z0-9-]+)/(?<tests_request>.+) {
    proxy_http_version 1.1;
    proxy_connect_timeout       {{ .Values.nginx.session.connectTimeout }};
    proxy_send_timeout          {{ .Values.nginx.session.sendTimeout }};
    proxy_read_timeout          {{ .Values.nginx.session.readTimeout }};
    send_timeout                {{ .Values.nginx.session.sendTimeout }};
    client_max_body_size        {{ .Values.nginx.session.maxBodySize }};
    proxy_request_buffering     {{ .Values.nginx.session.requestBuffering }};
    {{- if eq .Values.callisto.browser.name "firefox" }}
    proxy_pass http://$pod_ip:4444{{ .Values.callisto.browser.firefoxWebdriverPath }}/session/$session_id/$tests_request;
    {{- else }}
    proxy_pass http://$pod_ip:4444/session/$session_id/$tests_request;
    {{- end }}
  }
  location ~ /session/(?<pod_name>browser-[a-z0-9]+)-(?<pod_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)-(?<session_id>[a-z0-9-]+) {
    proxy_http_version 1.1;
    proxy_pass http://callisto/api/v1/session/$pod_name;
  }
  location /session {
    proxy_http_version 1.1;
    proxy_pass http://callisto/api/v1/session;
  }
  location ~ /devtools/(?<pod_name>browser-[a-z0-9]+)-(?<pod_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)-(?<session_id>[a-z0-9-]+) {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass http://$pod_ip:7070;
  }
  location ~ /vnc/(?<pod_name>browser-[a-z0-9]+)-(?<pod_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)-(?<session_id>[a-z0-9-]+) {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass http://$pod_ip:5900;
  }
  location ~ /ws/logs/(?<pod_name>browser-[a-z0-9]+)-(?<pod_ip>[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)-(?<session_id>[a-z0-9-]+) {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass http://callisto/api/v1/logs/$pod_name;
  }
  location / {
    # selenoid-ui
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_buffering off;
    proxy_http_version 1.1;
    proxy_pass http://selenoid/;
  }
  # We don't support video playback in Selenoid-UI
  location ~ /callisto/video {
    return 200 '{}';
  }
  location ~ /callisto/(.*) {
    proxy_http_version 1.1;
    proxy_pass http://callisto/api/v1/$1;
  }
  location /stub_status {
      stub_status;
      access_log off;
      allow all;
  }
  location /health {
    access_log off;

    return 200;
  }
}
